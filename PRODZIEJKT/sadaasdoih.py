import random

def symbole_krƒôcid≈Ço():
    symbole = ['üçí', 'üçâ', 'üçã', 'üîî', '‚≠ê']

    return [random.choice(symbole) for _ in range(3)]

def print_krƒôcid≈Ço(krƒôcid≈Ço):
    print("\033[1;34;40m‚ó¢‚ó§‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ó•‚ó£")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("‚Ö°   "," ‚Ö° ".join(krƒôcid≈Ço),"   ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("‚ó•‚ó£‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ó¢‚ó§\033[39m'")

def dosta≈Ñ_wyp≈Çatƒô(krƒôcid≈Ço, postaw):
    if krƒôcid≈Ço[0] == krƒôcid≈Ço[1] == krƒôcid≈Ço[2]:
        if krƒôcid≈Ço[0] == 'üçí':
            return postaw * 3
        elif krƒôcid≈Ço[0] == 'üçâ':
            return postaw * 4
        elif krƒôcid≈Ço[0] == 'üçã':
            return postaw * 5
        elif krƒôcid≈Ço[0] == 'üîî':
            return postaw * 10
        elif krƒôcid≈Ço[0] == '‚≠ê':
            return postaw * 20
        elif krƒôcid≈Ço[0] == 'üé∞':
            return postaw * 1000
        
    return 0

def spin_krƒôcid≈Ço():
    return symbole_krƒôcid≈Ço()

def skibidi():
    balans = 1000

    print("\033[1;34;40m‚ó¢‚ó§‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ó•‚ó£")
    print("\033[1;34;40m‚Ö°    \033[37mSiema \033[33mSigmoüëÄ   \033[1;34;40m‚Ö° ")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°      \033[37mSymbole:     \033[1;34;40m ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö° üçí üçâ üçã üîî ‚≠ê üé∞  ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print ("\033[1;34;40m‚ó•‚ó£‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ó¢‚ó§ \033[39m'")

    while balans > 0:
        print(f"tw√≥j hajs: \033[32m${balans}\033[39m")

        postaw = input("daj tyle hajsu: ")

        if not postaw.isdigit():
            print("daj normalny numer pls")
            continue

        postaw = int(postaw)

        if postaw > balans:
            print("za biedny jeste≈õ")
            continue

        if postaw <= 0:
            print("Nie dotykaj liczb minusowych")
            continue

        balans -= postaw

        krƒôcid≈Ço = spin_krƒôcid≈Ço()
        print("Krƒôcenie...\n")
        print_krƒôcid≈Ço(krƒôcid≈Ço)

        wyp≈Çatƒô = dosta≈Ñ_wyp≈Çatƒô(krƒôcid≈Ço, postaw)

        if wyp≈Çatƒô > 0:
            print(f"Mega Big Win omg: ${wyp≈Çatƒô}")
        else:
            print("unlucky :(")

        balans += wyp≈Çatƒô

        zagraj_ponownie = input("Chcesz Przegraƒá wiƒôcej hajsu? \033[32m(Y/N): \033[39m").upper()

        if zagraj_ponownie != 'Y':
            break

    print("\033[1;34;40m‚ó¢‚ó§‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ó•‚ó£")
    print("\033[1;34;40m‚Ö°      \033[31m Koniec       \033[1;34;40m‚Ö° ")
    print("\033[1;34;40m‚Ö°      \033[31m Gry          \033[1;34;40m‚Ö°")
    print("\033[1;34;40m‚Ö°      \033[31m GG          \033[1;34;40m ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö° üçí üçâ üçã üîî ‚≠ê üé∞  ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print("\033[1;34;40m‚Ö°                    ‚Ö°")
    print ("\033[1;34;40m‚ó•‚ó£‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ó¢‚ó§ \033[39m")

if __name__ == '__main__':
    skibidi()

# class fg:
#     BLACK   = '\033[30m'
#     RED     = '\033[31m'
#     GREEN   = '\033[32m'
#     YELLOW  = '\033[33m'
#     BLUE    = '\033[34m'
#     MAGENTA = '\033[35m'
#     CYAN    = '\033[36m'
#     WHITE   = '\033[37m'
#     RESET   = '\033[39m'

# class bg:
#     BLACK   = '\033[40m'
#     RED     = '\033[41m'
#     GREEN   = '\033[42m'
#     YELLOW  = '\033[43m'
#     BLUE    = '\033[44m'
#     MAGENTA = '\033[45m'
#     CYAN    = '\033[46m'
#     WHITE   = '\033[47m'
#     RESET   = '\033[49m'

# class style:
#     BRIGHT    = '\033[1m'
#     DIM       = '\033[2m'
#     NORMAL    = '\033[22m'
#     RESET_ALL = '\033[0m'